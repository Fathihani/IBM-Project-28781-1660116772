# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vZYDKMrFaRNzkltoUVd7OOToRtlwvXEZ
"""

import pandas as pd
import nltk as nl
import re # regular expression

data = pd.read_csv("/content/drive/MyDrive/dataset/Restaurant_Reviews.tsv",delimiter='\t')

data.head()

"""text procsesing"""

from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer

ps = PorterStemmer()
input = []

data.shape

input

# creating document term matrix - which contains only values
from  sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=2000)

cv

y = data['Liked'].values

y

from sklearn.model_selection import train_test_split

"""Model-ANN"""

from tensorflow.keras.layers import Dense
from tensorflow.keras.models import Sequential

model = Sequential()

from tkinter.constants import UNITS
model.add(Dense(units =1565, activation = "relu"))
model.add(Dense(units = 2000, activation = "relu"))
model.add(Dense(units = 1, activation = "sigmoid"))

from nltk.tag.api import accuracy
model.compile(optimizer='adam',loss = 'binary_crossentropy',metrics = [accuracy])

#test the model
text1 = "i hate this food and it was very bad"
text2 = "i love thsis food and it is very tastey"

text1.split()

def preprocessing(text1):
  text = re.sub('[^a-zA-Z]',' ',text1)
  text = text.split()
  text = [ps.stem(word) for word in text if not word in set(stopwords.words('english'))]
  text = ' '.join(text)
  return text

text